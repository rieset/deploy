name: Deploy image
run-name: ${{ github.actor }} is learning GitHub Actions

on:
  push

env:
  # https://github.com/features/packages
  GHCR_REGISTRY_HOST: ghcr.io
  GHCR_REGISTRY_USERNAME: ${{ secrets.PACKAGES_USER }}
  GHCR_REGISTRY_PASSWORD: ${{ secrets.PACKAGES_TOKEN }}

  FRONTEND_PORT: 1338
  FRONTEND_HOST: 0.0.0.0

  BACKEND_PORT: 1337
  BACKEND_HOST: 0.0.0.0

  SUPPORT_EMAIL: ${{ env.SUPPORT_EMAIL }}

jobs:
  create-latest-image:
    name: Create branch docker image
    if: ${{ env.GITHUB_REF_PROTECTED }}
    runs-on: ubuntu-latest
    steps:
      -
        name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action

      -
        name: Checkout
        uses: actions/checkout@v3

      -
        name: Create tag image
        run: |
          echo "GHCR_IMAGE_BACKEND=${{ env.GHCR_REGISTRY_HOST }}/${GITHUB_REPOSITORY,,}-backend:${GITHUB_REF##*/}" >> ${GITHUB_ENV}
          echo "GHCR_IMAGE_FRONTEND=${{ env.GHCR_REGISTRY_HOST }}/${GITHUB_REPOSITORY,,}-frontend:${GITHUB_REF##*/}" >> ${GITHUB_ENV}

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GHCR_REGISTRY_HOST }}
          username: ${{ env.GHCR_REGISTRY_USERNAME }}
          password: ${{ env.GHCR_REGISTRY_PASSWORD }}

      -
        name: Build frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.GHCR_IMAGE }}

      -
        name: Build backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.GHCR_IMAGE }}

      -
        name: Envsub
        run: |
          npx envsub ./.helm/values.yaml
          cat ./.helm/values.yaml

      -
        name: Deploy to cluster
        uses: wahyd4/kubectl-helm-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: |
            echo "$HTZ_CERT_AUTHORITY_DATA" | base64 --decode > cluster.pem
            echo "$HTZ_CLIENT_KEY_DATA" | base64 --decode > key.pem
            kubectl config set-cluster htz --server=$HTZ_CLUSTER_SERVER --certificate-authority=cluster.pem
            kubectl config set-credentials marketing-admin --client-key=key.pem --token=$HTZ_TOKEN
            kubectl config set-context htz --cluster=htz --user=marketing-admin
            kubectl config use-context htz
            
            helm list -n marketing
