name: Publish branch image

on:
  release:
    types: [published]

env:
  GHCR_REGISTRY_HOST: ghcr.io
  GHCR_REGISTRY_USERNAME: ${{ secrets.PACKAGES_USER }}
  GHCR_REGISTRY_PASSWORD: ${{ secrets.PACKAGES_TOKEN }}

  FRONTEND_PORT: 1338
  FRONTEND_HOST: 0.0.0.0

  BACKEND_PORT: 1337
  BACKEND_HOST: 0.0.0.0

  SUPPORT_EMAIL: ${{ secrets.SUPPORT_EMAIL}}

  STAGE_DOMAIN: ${{ vars.STAGE_DOMAIN }}
  RELEASE_DOMAIN: ${{ vars.RELEASE_DOMAIN }}

  NAMESPACE: ${{ vars.NAMESPACE }}

  RELAESE_TAG: "release"

jobs:
  create-image:
    name: Create branch docker image
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      -
        name: Checkout
        uses: actions/checkout@v3

      -
        name: Create environments
        run: |
          RELEASE_NAME=$(echo "${{github.repository}}" | cut -d'/' -f2)
          SHORT_SHA=$(echo "g${GITHUB_SHA}" | cut -c1-6)
          
          echo "GHCR_IMAGE_BACKEND=${{ env.GHCR_REGISTRY_HOST }}/${GITHUB_REPOSITORY,,}-backend" >> ${GITHUB_ENV}
          echo "GHCR_IMAGE_FRONTEND=${{ env.GHCR_REGISTRY_HOST }}/${GITHUB_REPOSITORY,,}-frontend" >> ${GITHUB_ENV}

          echo "RELEASE_NAME=$RELEASE_NAME" >> ${GITHUB_ENV}
          echo "SHORT_SHA=$SHORT_SHA" >> ${GITHUB_ENV}

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GHCR_REGISTRY_HOST }}
          username: ${{ env.GHCR_REGISTRY_USERNAME }}
          password: ${{ env.GHCR_REGISTRY_PASSWORD }}

      -
        name: Pull
        run: |
          docker pull ${{env.GHCR_IMAGE_BACKEND}}:${{env.SHORT_SHA}}
          docker pull ${{env.GHCR_IMAGE_FRONTEND}}:${{env.SHORT_SHA}}

      -
        name: Create
        run: |
          docker tag ${{env.GHCR_IMAGE_BACKEND}}:${{env.SHORT_SHA}} ${{env.GHCR_IMAGE_BACKEND}}:${{ env.RELAESE_TAG }}
          docker tag ${{env.GHCR_IMAGE_FRONTEND}}:${{env.SHORT_SHA}} ${{env.GHCR_IMAGE_FRONTEND}}:${{ env.RELAESE_TAG }}

      -
        name: Push
        run: |
          docker push ${{env.GHCR_IMAGE_BACKEND}}:${{ env.RELAESE_TAG }}
          docker push ${{env.GHCR_IMAGE_FRONTEND}}:${{ env.RELAESE_TAG }} 

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: create-image
    steps:
      -
        name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      -
        name: Checkout
        uses: actions/checkout@v3

      -
        name: Create tag image
        run: |
          RELEASE_NAME=$(echo "${{github.repository}}" | cut -d'/' -f2)
          SHORT_SHA=$(echo "g${GITHUB_SHA}" | cut -c1-6)
          
          echo "GHCR_IMAGE_BACKEND=${{ env.GHCR_REGISTRY_HOST }}/${GITHUB_REPOSITORY,,}-backend:${{ env.RELAESE_TAG }}" >> ${GITHUB_ENV}
          echo "GHCR_IMAGE_FRONTEND=${{ env.GHCR_REGISTRY_HOST }}/${GITHUB_REPOSITORY,,}-frontend:${{ env.RELAESE_TAG }}" >> ${GITHUB_ENV}
          
          echo "RELEASE_NAME=$RELEASE_NAME" >> ${GITHUB_ENV}
          echo "RELEASE_NAME=$RELEASE_NAME" >> ${GITHUB_ENV}

      -
        name: Render Deployment YAML
        uses: nowactions/envsubst@v1
        with:
          input: ./.helm/values.yaml
          output: ./.helm/values-temp.yaml
      -
        name: Docker
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/rieset/kubernates-tools:v.2.0.0
          shell: bash
          options: -v ${{ github.workspace }}:/app
          run: |
            chown 1001:123 /app/.helm/values-temp.yaml
            rm /app/.helm/values.yaml
            mv /app/.helm/values-temp.yaml /app/.helm/values.yaml
            
#           TODO Change auth in cluster

#            echo "${{secrets.HTZ_CERT_AUTHORITY_DATA}}" | base64 --decode > cluster.pem
#            echo "${{secrets.HTZ_CLIENT_KEY_DATA}}" | base64 --decode > key.pem
#            echo "${{secrets.GHCR_REGISTRY_AUTH}}" | base64 --decode > registry.json
#
#            kubectl config set-cluster htz --server=${{secrets.HTZ_CLUSTER_SERVER}} --certificate-authority=cluster.pem
#            kubectl config set-credentials marketing-admin --client-key=key.pem --token=${{secrets.HTZ_TOKEN}}
#            kubectl config set-context htz --cluster=htz --user=${{secrets.HTZ_USER}}
#            kubectl config use-context htz
#
#            kubectl create secret generic regcredghcr --from-file=.dockerconfigjson=registry.json --type=kubernetes.io/dockerconfigjson -n ${{secrets.HTZ_NAMESPACE}} || true
#
#            chmod 600 /root/.kube/config
#            cd /app && helm upgrade --install --wait --namespace="${{secrets.HTZ_NAMESPACE}}" --set mode="stage" "${{env.RELEASE_NAME}}" .helm

